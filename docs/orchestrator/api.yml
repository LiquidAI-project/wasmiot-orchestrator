openapi: '3.0.3'
info:
  title: Wasm-IoT Orchestrator developer API
  version: '0.0.1'
  description: |
    This API is used to interact with the orchestrator for creating packages,
    deployments and to monitor connected IoT-devices. In addition IoT-devices
    use it to fetch packages and report events.
tags:
  - name: WebAssembly
    description: Executing WebAssembly workloads
  - name: IoT
    description: Deploying workloads to supervisor devices found in network
servers:
  - url: http://{serverIp}:{port}
    variables:
      serverIp:
        default: localhost
        description: Address where the orchestrator API is available
      port:
        enum:
          - '3000'
          - '80'
        default: '3000'
paths:
  /file/module:
    get:
      description: Return information about all available modules
      responses:
        '200':
          description: An array of module information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Module"
        '404':
          description: No modules found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Create a new module
      requestBody:
        description: The .wasm binary to base the module on
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - wasm
              properties:
                name:
                  type: string
                wasm:
                  type: string
                  format: binary
      responses:
        '201':
          description: The module was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Module"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete all modules
      responses:
        '204':
          description: All modules deleted

  /api/module/{module_id}:
    parameters:
      - name: module_id
        in: path
        description: ID of the module
        required: true
        schema:
          type: string
    get:
      description: Return information about a single module
      responses:
        '200':
          description: The module information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Module"
        '404':
          description: No modules found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Generate description to an existing module
      requestBody:
        description: |
          Function type information for generating the description
          and files or 'mounts' to attach to and send along with the module once
          its deployed.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                functions:
                  $ref: "#/components/schemas/ModuleManifest"
                mounts:
                  type: object
                  items:
                    type: string
                    format: binary
      responses:
        '204':
          description: The module was updated
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /api/module/{module_id}/file:
    get:
      description: Return files associated to a module
      parameters:
        - name: module_id
          in: path
          description: ID of the module
          required: true
          schema:
            type: string
        - name: file_id
          in: query
          description: |
            ID of a specific file. May contain directory separatoring characters
            (i.e. '\' or '/'). Leave empty to get all the associated files
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An mapping of file IDs (the object keys) to binary files
          content:
            multipart/form-data:
              schema:
                type: object
                items:
                  type: string
                  format: binary
        '404':
          description: No modules found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/device:
    get:
      description: Return information about all currently connected devices
      responses:
        '200':
          description: An array of device information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
        '404':
          description: No devices found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Force device scanning in orchestrator network
      responses:
        '204':
          description: The rescan was started
    delete:
      description: Delete all devices
      responses:
        '204':
          description: All devices deleted

  /api/deployment:
    get:
      description: Return information about all created deployments
      responses:
        '200':
          description: An array of deployment information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Deployment"
    post:
      description: Create and enact a new deployment
      requestBody:
        description: |
          Function type information and files or 'mounts' to attach to the
          module
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Manifest"
      responses:
        '204':
          description: The deployment was created and enacted
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      type: object
      required:
        - name
        - message
      properties:
        name:
          type: string
        message:
          type: string
    # "Redefine" the schemas here, because the automatic generation tool
    # (openapi-typescript-codegen) does not currently seem to find them inside
    # the paths (see
    # https://github.com/ferdikoomen/openapi-typescript-codegen/issues/1475).
    Deployment:
      $ref: "./schemas/Deployment.yml"
    Device:
      $ref: "./schemas/Device.yml"
    Manifest:
      $ref: "./schemas/Manifest.yml"
    Module:
      $ref: "./schemas/Module.yml"
    ModuleManifest:
      $ref: "./schemas/ModuleManifest.yml"
    # "Redefine" also some of the repeated "inner" schemas (maybe same problem
    # as above?).
    Function:
      $ref: "./schemas/Function.yml"
    ModuleDescription:
      $ref: "./schemas/ModuleDescription.yml"
    PrimitiveType:
      $ref: "./schemas/PrimitiveType.yml"
